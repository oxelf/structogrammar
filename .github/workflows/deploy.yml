name: Flutter CI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release-linux:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-0 libgtk-3-dev libblkid1 liblzma5
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: structogrammar-${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/linux/x64/release/bundle/structogrammar-${{github.ref_name}}-linux.zip

  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Build artifacts
        run: flutter build windows --release

      # Install WiX Toolset
      - name: Install WiX Toolset
        run: |
          choco install wix --version 3.11.2

      # Create WiX XML file for installer
      - name: Create WiX Installer XML
        run: |
          echo '<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">' > installer.wxs
          echo '  <Product Id="*" Name="Structogrammar" Language="1033" Version="1.0.0.0" Manufacturer="YourCompany" UpgradeCode="PUT-GUID-HERE">' >> installer.wxs
          echo '    <Package InstallerVersion="500" Compressed="yes" InstallScope="perMachine" />' >> installer.wxs
          echo '    <Media Id="1" Cabinet="product.cab" />' >> installer.wxs
          echo '    <Directory Id="TARGETDIR" Name="SourceDir">' >> installer.wxs
          echo '      <Directory Id="ProgramFilesFolder">' >> installer.wxs
          echo '        <Directory Id="INSTALLFOLDER" Name="Structogrammar">' >> installer.wxs
          echo '          <Component Id="StructogrammarComponent" Guid="PUT-GUID-HERE">' >> installer.wxs
          echo '            <File Id="StructogrammarExe" Source="build/windows/x64/runner/Release/structogrammar.exe" />' >> installer.wxs
          echo '          </Component>' >> installer.wxs
          echo '        </Directory>' >> installer.wxs
          echo '      </Directory>' >> installer.wxs
          echo '    </Directory>' >> installer.wxs
          echo '    <Feature Id="ProductFeature" Title="Structogrammar" Level="1">' >> installer.wxs
          echo '      <ComponentRef Id="StructogrammarComponent" />' >> installer.wxs
          echo '    </Feature>' >> installer.wxs
          echo '  </Product>' >> installer.wxs
          echo '</Wix>' >> installer.wxs

      # Build the MSI installer using WiX
      - name: Build MSI Installer
        run: |
          candle installer.wxs -o installer.wixobj
          light installer.wixobj -o structogrammar-${{github.ref_name}}.msi

      # Create a setup EXE using WiX bootstrapper
      - name: Create EXE Installer
        run: |
          # Create a WiX bundle to package the MSI
          echo '<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">' > bundle.wxs
          echo '  <Bundle Name="Structogrammar Installer" Version="1.0.0.0" Manufacturer="YourCompany" UpgradeCode="PUT-GUID-HERE">' >> bundle.wxs
          echo '    <BootstrapperApplicationRef Id="WixStandardBootstrapperApplication.RtfLicense" />' >> bundle.wxs
          echo '    <Chain>' >> bundle.wxs
          echo '      <MsiPackage SourceFile="structogrammar-${{github.ref_name}}.msi" />' >> bundle.wxs
          echo '    </Chain>' >> bundle.wxs
          echo '  </Bundle>' >> bundle.wxs
          echo '</Wix>' >> bundle.wxs

          # Compile the bundle into an EXE
          candle bundle.wxs -o bundle.wixobj
          light bundle.wixobj -o structogrammar-${{github.ref_name}}.exe

      # Upload the Windows EXE Installer
      - name: Windows Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: structogrammar-${{github.ref_name}}.exe

  build-and-release-macos:
    name: Build and Release macOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        run: |
          git clone https://github.com/flutter/flutter.git --branch stable --depth 1
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      - name: Flutter Version
        run: flutter --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Build macOS Release
        run: flutter build macos --release

      - name: Create .dmg File
        run: |
          APP_NAME="structogrammar"
          BUILD_DIR="build/macos/Build/Products/Release/$APP_NAME.app"
          DMG_DIR="$GITHUB_WORKSPACE/build/macos/dmg"
          mkdir -p "$DMG_DIR"
          hdiutil create -volname "$APP_NAME" -srcfolder "$BUILD_DIR" -ov -format UDZO "$DMG_DIR/$APP_NAME.dmg"

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-dmg
          path: build/macos/dmg/*.dmg

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/macos/dmg/*.dmg
          tag_name: ${{ github.ref_name }}