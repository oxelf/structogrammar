name: Flutter CI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release-linux:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-0 libgtk-3-dev libblkid1 liblzma5
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable linux build
        run: flutter config --enable-linux-desktop
      - name: Build artifacts
        run: flutter build linux --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: structogrammar-${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/linux/x64/release/bundle/structogrammar-${{github.ref_name}}-linux.zip

  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64
      - name: Install Inno Setup
        run: choco install innosetup
      - name: Install project dependencies
        run: flutter pub get
      - name: Enable windows build
        run: flutter config --enable-windows-desktop
      - name: Install flutter_distributor
        run: |
          flutter pub global activate flutter_distributor
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH
      - name: Extract Version (Remove 'v' Prefix)
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Update Version in pubspec.yaml
        run: |
          sed -i '' 's/^version: .*/version: '${{ env.VERSION }}'/' pubspec.yaml
      - name: Package Windows Release with flutter_distributor
        run: |
          export PATH="$PATH:$HOME/.pub-cache/bin"
          flutter_distributor package --platform windows --targets exe
      - name: Publish Windows Release using flutter_distributor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH="$PATH:$HOME/.pub-cache/bin"
          flutter_distributor publish \
            --path dist/${{ env.VERSION }}/structogrammar-${{ env.VERSION }}+${{ env.VERSION }}-windows.exe \
            --targets github \
            --github-repo-owner 'oxelf' \
            --github-repo-name 'structogrammar'

  build-and-release-macos:
    name: Build and Release macOS App
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        run: |
          git clone https://github.com/flutter/flutter.git --branch stable --depth 1
          echo "$GITHUB_WORKSPACE/flutter/bin" >> $GITHUB_PATH

      - name: Flutter Version
        run: flutter --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Install Node.js and appdmg
        run: |
          brew install node
          npm install -g appdmg

      - name: Install flutter_distributor
        run: |
          flutter pub global activate flutter_distributor
          echo "$HOME/.pub-cache/bin" >> $GITHUB_PATH

      - name: Extract Version (Remove 'v' Prefix)
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Update Version in pubspec.yaml
        run: |
          sed -i '' 's/^version: .*/version: '${{ env.VERSION }}'/' pubspec.yaml

      - name: Package macOS Release with flutter_distributor
        run: |
          export PATH="$PATH:$HOME/.pub-cache/bin"
          flutter_distributor package --platform macos --targets dmg

      - name: Publish to GitHub Releases using flutter_distributor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export PATH="$PATH:$HOME/.pub-cache/bin"
          flutter_distributor publish \
            --path dist/${{ env.VERSION }}/structogrammar-${{ env.VERSION }}+${{ env.VERSION }}-macos.dmg \
            --targets github \
            --github-repo-owner 'oxelf' \
            --github-repo-name 'structogrammar'